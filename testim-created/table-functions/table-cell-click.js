/**
 *  Table - Cell Click
 *
 *      Click a specific cell within a specific row in a table
 * 
 *  Parameters
 *
 *      element (HTML) : Target element (or child of) target table/grid
 * 
 *      rowSelector     (JS)   : { column name : value/index } specification to specify which row target column is in
 *                       example { "First Name"  : "Aaron", "Instance" : 0 } - find "Aaron" in column "First Name"
 *                               { "2" : "Nicole" }  - find "Nicole" in column 3
 *                               { "index" : 4 }     - row 5
 *                               2                   - row 3
 *      columnSelector  (JS)   : Column name or index to click within a row
 *                       example "Value"
 *                               0
 *      rowRanges [optional] : Defines the range of rows to process.
 *                          Example:  '2-4'       Rows 2, 3, 4
 *                                    '1,3,5'     Rows 1, 3, 5
 *                                    '2-4,6'     Rows 2, 3, 4, 6
 *                                    3           Rows 1-3
 *                                    <unset>     All rows
 *      colRanges [optional] : Defines the range of columns to process.
 *                          Example:  '1-3'       Columns 1, 2, 3
 *                                    '2,4-5'     Columns 2, 4, 5
 *                                    '1-2,4'     Columns 1, 2, 4
 *                                    3           Columns 1-3
 *                                    <unset>     All columns
 * 
 *      matchType [optional] : Text match type when searching for text in lists/selects
 *		            Examples: "exact" (default), "startswith", "endswith", "includes", "regex"
 * 
 *      targetElementXPath [optional] : XPath selector used to find target element from target cell
 *                              "(//span[@class='slds-radio_faux'])[4]"
 *
 *      returnVariableName (JS) [optional] : string name of variable to store actual value in 
 * 
 *      gridTypeSearchOrder (JS) [optional] : Custom grid(s) to consider ["XGRID", "XGRIDRIGHT", "XGRIDLEFT", "TREEGRID", "IVGRID", "ROLETABLE", "KENDO", "AGGRID", "DEVEX", "SALESFORCE", "GRIDRIT", "EVTSHADOW", "HTMLTR", "HTMLTABLE", "HTML"] (Default)
 * 
 *      highlightElements (JS) [optional] : Highlight Target Grid, Header, RowGroup, Cells for posterity (and debugging)
 * 
 *  Returns
 * 
 *      cellValue (or returnVariableName if specified) will contain actual cell value
 * 
 *  Notes
 * 
 *      Supports html tables, Kendo grids and ag-grid
 *          ag-grid example    - https://www.ag-grid.com/javascript-grid/cell-rendering/#example-dynamic-rendering-component
 *          kendo grid example - https://demos.telerik.com/kendo-ui/grid/basic-usage
 *          devexpress grid example - https://js.devexpress.com/Demos/WidgetsGallery/Demo/DataGrid/Overview/jQuery/Light/
 *         
 *      When selecting target element, if the grid is a compound grid where the header and the body are separated 
 *      then either set the startingElement to the table or immediate parent of the table
 *      otherwise a cell in the table can be used for simplicity
 * 
 *  Version       Date          Author          Details
 *      3.1.0     08/29/2024    Barry Solomon   Support rowRanges and colRanges
 *      3.1.1     09/11/2024    Barry Solomon   If targetElementXPath is specified, then click the target element instead of the target element first child
 * 
 *  Disclaimer
 *      This Custom Action is provided "AS IS".  It is for instructional purposes only and is not officially supported by Testim
 * 
 *  Base Step
 *      Custom Action 
 *
**/

/* eslint-disable camelcase */
/* eslint-disable no-var */
/* eslint-disable-next-line no-unused-vars */
/* globals document, element, customGridSelectors, returnVariableName, gridTypeSearchOrder, highlightElements, compareExpression, searchText, pageSize, pageNumber, matchType, primaryKey, sortOrder, expectedCount, rowSelector, columnSelector, expectedValues */

/*** START COMMON TABLE FUNCTIONALITY ***/

var localGridSearchOrder = (typeof gridTypeSearchOrder !== 'undefined' && gridTypeSearchOrder !== null) ? gridTypeSearchOrder : ["BESTMATCH"]; // ["XGRID", "XGRIDRIGHT", "XGRIDLEFT", "TREEGRID", "IVGRID", "ROLETABLE", "KENDO", "AGGRID", "DEVEX", "SALESFORCE", "GRIDRIT", "EVTSHADOW", "HTMLTR", "HTMLTABLE", "HTML"];

var target_element_xpath = null;
if (typeof targetElementXPath !== 'undefined' && targetElementXPath !== null)
    target_element_xpath = targetElementXPath;
var xpath_element_found = false;

var rowRanges = undefined; // default is 50
var colRanges = undefined; // default is 20
var highlightDuration = undefined; // milliseconds.  Default is 2000 ms

var verbose = false;

var DEFAULT_RETURN_VARIABLE_NAME = 'cellValue';

/*** TABLE FUNCTIONS v3.1.0 ***/
const _0x4c4678 = _0x26d7; (function (_0x465f69, _0x250b5c) { const _0x547188 = _0x26d7, _0x1d3bdc = _0x465f69(); while (!![]) { try { const _0x41612c = parseInt(_0x547188(0xa0)) / 0x1 + parseInt(_0x547188(0x117)) / 0x2 + parseInt(_0x547188(0xe5)) / 0x3 * (-parseInt(_0x547188(0x109)) / 0x4) + -parseInt(_0x547188(0xa2)) / 0x5 * (parseInt(_0x547188(0x124)) / 0x6) + parseInt(_0x547188(0x140)) / 0x7 + -parseInt(_0x547188(0xbb)) / 0x8 + -parseInt(_0x547188(0x104)) / 0x9 * (-parseInt(_0x547188(0xae)) / 0xa); if (_0x41612c === _0x250b5c) break; else _0x1d3bdc['push'](_0x1d3bdc['shift']()); } catch (_0x5dbd26) { _0x1d3bdc['push'](_0x1d3bdc['shift']()); } } }(_0x5197, 0x9a797)); var DEFAULT_HIGHLIGHT_DURATION = 0x1388, DEFAULT_RETURN_VARIABLE_NAME = _0x4c4678(0x74), DEFAULT_MAX_ROWS = 0x32, DEFAULT_MAX_COLUMNS = 0x14, DEFAULT_DELIMITER = '\x0a', DEFAULT_GRID_SEARCH_ORDER = [_0x4c4678(0x107), _0x4c4678(0xf2), 'XGRIDLEFT', _0x4c4678(0xf9), 'IVGRID', 'ROLETABLE', _0x4c4678(0x163), _0x4c4678(0x100), _0x4c4678(0xaf), _0x4c4678(0xc7), _0x4c4678(0xda), _0x4c4678(0xd4), _0x4c4678(0xef), _0x4c4678(0x9e), _0x4c4678(0x88)], return_variable_name = undefined, grid_type_search_order = typeof gridTypeSearchOrder !== 'undefined' && gridTypeSearchOrder !== null ? gridTypeSearchOrder : typeof localGridSearchOrder !== 'undefined' && localGridSearchOrder !== null ? localGridSearchOrder : DEFAULT_GRID_SEARCH_ORDER, compare_expression = '==', row_selector = undefined, column_selector = undefined, matchtype = undefined, order_direction = undefined, page_size = undefined, page_number = undefined, search_string = undefined, highlight_elements = ![], highlight_grid = ![], highlight_headers = ![], highlight_rowgroup = ![], highlight_rows = ![], highlight_cells = ![], highlight_target_row = ![], highlight_target_cell = ![], highlight_pager = ![], highlight_pager_pages = ![], highlight_pager_sizes = ![], highlight_duration = DEFAULT_HIGHLIGHT_DURATION; function _0x5197() { const _0x2ebdc4 = ['x-grid-item-container', 'DEBUG:\x20Searching\x20for\x20Table\x20using\x20custom\x20grid\x20selector:', 'input[type=\x27text\x27]', ',\x20target_row_column_name:', 'toLowerCase', 'tbody', 'class', 'attributeValue', 'position', 'evt-col', 'Row\x20', '\x20\x20order_direction', '\x20order:\x20\x0a', 'dx-datagrid-headers', 'reduce', 'div[role=\x22grid\x22]', 'evt-row', '\x20\x20grid_type_search_order', 'HTML', 'endswith', 'div[role=\x27rowgroup\x27][class*=\x27x-grid-header-ct\x27]', ',\x20target_row_column_value:', '\x20==>\x20', 'div[data-ref=\x27eBodyViewport\x27]', 'div[role=\x27cell\x27]', 'table_rows', 'custom_pager_pages_selector', 'info', 'exec', 'isArray', 'custom_cell_selector', 'dx-datagrid-rowsview', 'table_searchfield\x20=\x20', '-9999px', 'keys', 'div[class*=\x27content\x27]', 'regex', 'parentNode', 'DESCENDING', 'body', 'HTMLTABLE', 'definition', '700728LaJLxQ', 'Options\x20are\x20NOT\x20in\x20', '4384465feZGTn', 'rowgroup', 'div[data-subcomponent=\x22table-header-row\x22]', 'grid', 'table-header-row', 'tagName', 'data-subcomponent', 'copy', 'XGRIDLEFT', '\x20\x20target_row_id:', '\x20\x20matchtype', 'test', '62090RDWsPk', 'DEVEX', 'DEBUG:\x20Selected\x20table_header_group:', 'debuglog', 'data-ref', 'x-grid-scrollbar-clipper', 'startsWith', 'includes', 'html', 'undefined', 'DEBUG:\x20current_headergroup_selector\x20querySelector:', 'map', 'Target\x20element\x20(', '3332192XiPlut', 'attributes', 'removeChild', 'current_row_selector\x20is\x20undefined.\x20Check\x20custom\x20table\x20entry', '2px\x20solid\x20Yellow', 'textarea', 'custom_rowgroup_selector', 'custom_pager_selector', 'current_pager_sizes_selector\x20=\x20', 'gridcell', 'querySelector', 'thead', 'SALESFORCE', 'select', 'appendChild', 'add', 'div[class*=\x27x-column-header\x27][role=\x27columnheader\x27]', 'div[role=\x27treegrid\x27][class*=\x27x-grid\x27]', 'tableFind:\x20', '3px\x20solid\x20Green', 'table_pager_pages\x20=\x20', 'forEach', 'div[class*=\x27x-grid-scrollbar-clipper\x27]\x20div[role=\x27rowgroup\x27]\x20div[class*=\x27x-grid-item-container\x27]', 'treegrid', '2px\x20solid\x20MagentaGrey', 'EVTSHADOW', 'ignore_separator_headers', 'querySelectorAll', 'from', 'cell', 'div[class=\x27dx-page-size\x27]', 'GRIDRIT', '2px\x20solid\x20Magenta', 'filter', 'custom_row_selector', 'div.x-grid-item-container\x20table.x-grid-item\x20tbody\x20tr', 'Instance', 'tableHeadersGet::\x20current_header_cell_selector\x20is\x20undefined.\x20Check\x20custom\x20table\x20entry', 'div[class=\x27dx-pager\x27]', 'div[class*=\x27x-grid-item-container\x27][role=\x27presentation\x27]', 'log', 'tr:not(:first-child)', '105aQkWjS', '[Max\x20Depth\x20Reached]', 'XGRIDTR', 'innerText', 'div[role=\x22treegrid\x22]', 'custom_grid_selector', 'getRangeAt', '\x20\x20tableRows.length\x20>\x200', '2px\x20dashed\x20MagentaGrey', 'div[class*=\x27dx-datagrid-headers\x27]', 'HTMLTR', 'Error\x20processing\x20column\x20name:', 'row', 'XGRIDRIGHT', 'Name', 'Initialized\x20table_column_values\x20with\x20limited\x20columns:\x20', 'name', 'thead\x20th', 'startswith', 'stringReplacements', 'TREEGRID', 'grid_type_search_order:\x20', '2px\x20dashed\x20Green', 'unselectable', 'table_rows\x20=\x20', 'columnheader', '?\x20checking\x20equality\x20', 'AGGRID', 'div[data-role=\x22grid\x22]', 'DEBUG:\x20table_columnnames:', 'IVGRID', '36yxtOBq', 'No\x20matching\x20grid\x20found.', 'DEBUG:\x20table_header_group\x20or\x20current_header_cell_selector\x20is\x20undefined.', 'XGRID', 'table_columnnames', '29224rkEmxa', '\x20Cell\x20', 'data-iv-control-type-name', 'join', 'DEBUG:\x20table_header_cells:', 'DEBUG:\x20Found\x20custom\x20grid\x20selector:', 'DEBUG:\x20header_groups\x20found:', 'ROLETABLE', 'input[class*=\x27dx-texteditor-input\x27]', 'number', 'FIRST', '2px\x20dashed\x20Red', 'message', 'table_row_count\x20=\x20', '1495144jzQERe', 'evt-grid', 'border', 'custom_pager_sizes_selector', 'x-column-header', 'DEBUG:\x20Skipping\x20unselectable\x20or\x20hidden\x20column:', 'DEBUG:\x20current_header_cell_selector\x20querySelector:', 'custom_grid_definitions:\x20', 'min', '\x20value:\x20', ',\x20target_row_column_instance:', 'tr:first-child', '\x20\x20tableCellFind', '6GFPWYb', 'endsWith', 'length', 'style', 'removeAllRanges', 'absolute', 'table', 'nth_child', '\x20\x20row_selector', 'push', 'call', 'sliceEnd', 'div', 'nodeValue', 'Definitions', 'rangeCount', 'gridElement', 'setAttribute', 'Search\x20Configuration', '\x20\x20tableRows.length:', 'error', 'Target\x20table/grid\x20is\x20undefined', 'dx-texteditor-input', '\x20==\x20', 'hasOwnProperty', '\x20\x20tableRows[0].children.length:', 'DEBUG:\x20table_headers:', 'unknown\x20element', '4961026SiuXdW', 'replace', 'div[role=\x27gridcell\x27]', 'td[role=\x27columnheader\x27]', 'rowSelector', 'Sort\x0a', 'string', 'div[data-role=\x22rowgroup\x22]', '\x20\x20compare_expression', '2px\x20dashed\x20DarkOrange', 'evt-card-menu', '2px\x20dashed\x20Blue', 'trim', 'getAttribute', 'prototype', 'custom', 'div.x-grid-header-ct', 'div.x-column-header[role=\x27columnheader\x27]', 'stringify', 'custom_searchfield_selector', 'none', 'div[class=\x22x-grid-item-container\x22]', 'shadowRoot', '\x20\x20tableColumnNames.length:', 'eBodyViewport', 'tr[role=\x27row\x27][class*=\x27x-grid-row\x27]', '2px\x20solid\x20Green', 'input', 'LAST', 'slice', 'toUpperCase', 'custom_header_cell_selector', 'div[class*=\x27x-grid-header-ct\x27]', 'left', 'host', 'KENDO', '\x20\x20return_variable_name', 'dx-pager', 'x-grid-header-ct', 'getSelection', 'tbody\x20tr', 'exact', 'object', 'index', 'innerHTML', 'role', 'div[role=\x27columnheader\x27]', 'div[role=\x27row\x27]', 'Best\x20match\x20found:\x20', 'div[data-iv-control-type-name=\x22grid\x22]', 'match', 'td,th', 'DEBUG:\x20header_cells\x20found:', 'table_pager\x20=\x20', 'debug', 'DEBUG:\x20No\x20header\x20cells\x20found.', 'has', 'custom_headergroup_selector', 'split', 'contains', 'splitDelimiter', 'children', 'cellValue', 'div[class*=\x27k-grid-header\x27]']; _0x5197 = function () { return _0x2ebdc4; }; return _0x5197(); } typeof highlightDuration !== _0x4c4678(0xb7) && highlightDuration !== null && (highlight_duration = highlightDuration); var row_ranges = DEFAULT_MAX_ROWS, col_ranges = DEFAULT_MAX_COLUMNS; typeof rowRanges !== _0x4c4678(0xb7) && rowRanges !== null && (row_ranges = rowRanges); typeof colRanges !== 'undefined' && colRanges !== null && (col_ranges = colRanges); var grid_definitions = [{ 'Name': _0x4c4678(0xaa), 'Definitions': [{ 'custom_grid_selector': { 'tagName': 'div', 'attributeName': 'role', 'attributeValue': _0x4c4678(0xa5), 'nth_child': 0x0, 'querySelector': 'div[role=\x22grid\x22]' }, 'custom_headergroup_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x166), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x160) }, 'custom_header_cell_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': 'class', 'attributeValue': 'x-column-header', 'nth_child': 0x0, 'querySelector': _0x4c4678(0xcb) }, 'custom_rowgroup_selector': { 'tagName': 'div', 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0xb3), 'nth_child': 0x0, 'querySelector': _0x4c4678(0xd1) }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': 'div.x-grid-item-container\x20table.x-grid-item\x20tbody\x20tr' }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td' } }] }, { 'Name': _0x4c4678(0xf2), 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': 'role', 'attributeValue': 'grid', 'nth_child': 0x0, 'querySelector': _0x4c4678(0x85) }, 'custom_headergroup_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x166), 'nth_child': 0x1, 'querySelector': _0x4c4678(0x160) }, 'custom_header_cell_selector': { 'tagName': 'div', 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x11b), 'nth_child': 0x0, 'querySelector': _0x4c4678(0xcb) }, 'custom_rowgroup_selector': { 'tagName': 'div', 'attributeName': 'class', 'attributeValue': _0x4c4678(0xb3), 'nth_child': 0x1, 'querySelector': _0x4c4678(0xd1) }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': _0x4c4678(0xde) }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td' } }] }, { 'Name': _0x4c4678(0x103), 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x10b), 'attributeValue': _0x4c4678(0xa5), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x171) }, 'custom_headergroup_selector': { 'tagName': 'thead', 'nth_child': 0x0, 'querySelector': _0x4c4678(0xc6) }, 'custom_header_cell_selector': { 'tagName': 'th', 'querySelector': 'th' }, 'custom_rowgroup_selector': { 'tagName': 'tbody', 'nth_child': 0x0, 'querySelector': _0x4c4678(0x7b) }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': 'tr' }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td' }, 'ignore_blank_headers': !![] }] }, { 'Name': _0x4c4678(0xe7), 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xd2), 'nth_child': 0x0, 'querySelector': _0x4c4678(0xcc) }, 'custom_headergroup_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xa3), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x8a) }, 'custom_header_cell_selector': { 'tagName': 'div', 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xfe), 'nth_child': 0x0, 'querySelector': 'div[role=\x27columnheader\x27][class*=\x27x-column-header\x27]' }, 'custom_rowgroup_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x76), 'nth_child': 0x0, 'querySelector': _0x4c4678(0xe2) }, 'custom_row_selector': { 'tagName': 'tr', 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xf1), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x159) }, 'custom_cell_selector': { 'tagName': 'td', 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xc4), 'nth_child': 0x0, 'querySelector': 'td[role=\x27gridcell\x27][class*=\x27x-grid-cell\x27]' } }] }, { 'Name': _0x4c4678(0xf9), 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xd2), 'nth_child': 0x0, 'querySelector': _0x4c4678(0xe9) }, 'custom_headergroup_selector': { 'tagName': 'div', 'attributeName': 'class', 'attributeValue': 'x-grid-header-ct', 'nth_child': 0x0, 'querySelector': 'div[class*=\x27x-grid-header-ct\x27]' }, 'custom_header_cell_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x11b), 'nth_child': 0x0, 'querySelector': _0x4c4678(0xcb), 'ignore_separator_headers': !![] }, 'custom_rowgroup_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x76), 'nth_child': 0x0, 'querySelector': _0x4c4678(0xe2) }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': _0x4c4678(0xde) }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td' } }] }, { 'Name': _0x4c4678(0x88), 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x12a), 'querySelector': _0x4c4678(0x12a) }, 'custom_header_cell_selector': { 'tagName': 'th', 'querySelector': 'th' }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': 'tr' }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td' } }] }, { 'Name': _0x4c4678(0xef), 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x12a), 'querySelector': _0x4c4678(0x12a) }, 'custom_headergroup_selector': { 'tagName': 'tr', 'querySelector': _0x4c4678(0x122) }, 'custom_header_cell_selector': { 'tagName': 'th', 'querySelector': 'th' }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': _0x4c4678(0xe4) }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td' } }] }, { 'Name': _0x4c4678(0x9e), 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x12a), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x12a) }, 'custom_header_cell_selector': { 'tagName': 'th', 'querySelector': _0x4c4678(0xf6) }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': 'tbody\x20tr' }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td,th' } }] }, { 'Name': _0x4c4678(0x110), 'Definitions': [{ 'custom_grid_selector': { 'tagName': 'div', 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0x12a), 'nth_child': 0x0, 'querySelector': 'div[role=\x22table\x22]' }, 'custom_headergroup_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0xa8), 'attributeValue': _0x4c4678(0xa6), 'nth_child': 0x0, 'querySelector': _0x4c4678(0xa4) }, 'custom_header_cell_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xfe), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x16e) }, 'custom_searchfield_selector': { 'tagName': _0x4c4678(0x15b), 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x13a), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x78) }, 'custom_row_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0xa8), 'attributeValue': 'table-row', 'nth_child': 0x0, 'querySelector': 'div[data-subcomponent=\x27table-row\x27]' }, 'custom_cell_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': 'role', 'attributeValue': _0x4c4678(0xd8), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x8e) } }] }, { 'Name': _0x4c4678(0xd4), 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x118), 'querySelector': _0x4c4678(0x118), 'shadowRoot': !![] }, 'custom_header_cell_selector': { 'tagName': 'div', 'attributeName': _0x4c4678(0x16d), 'attributeValue': 'columnheader', 'querySelector': _0x4c4678(0x16e), 'shadowRoot': !![] }, 'custom_row_selector': { 'tagName': 'evt-row', 'querySelector': _0x4c4678(0x86), 'shadowRoot': !![] }, 'custom_cell_selector': { 'tagName': _0x4c4678(0x7f), 'querySelector': 'evt-col', 'shadowDomPath': [_0x4c4678(0x14a), 'evt-card'], 'shadowQuerySelector': _0x4c4678(0x99) } }] }, { 'Name': _0x4c4678(0xc7), 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x12a), 'querySelector': 'table' }, 'custom_headergroup_selector': { 'tagName': _0x4c4678(0xc6), 'querySelector': 'thead' }, 'custom_header_cell_selector': { 'tagName': 'th', 'querySelector': 'th', 'sliceStart': 0x1, 'sliceEnd': 0x2, 'splitDelimiter': '\x0a', 'stringReplacements': [_0x4c4678(0x145)] }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': 'tr' }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': _0x4c4678(0x69), 'stringReplacements': ['Sort\x0a'] } }] }, { 'Name': _0x4c4678(0x163), 'Definitions': [{ 'custom_grid_selector': { 'tagName': 'div', 'attributeName': 'data-role', 'attributeValue': _0x4c4678(0xa5), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x101) }, 'custom_headergroup_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x7c), 'attributeValue': 'k-grid-header', 'nth_child': 0x0, 'querySelector': _0x4c4678(0x75) }, 'custom_header_cell_selector': { 'tagName': 'th', 'querySelector': 'th' }, 'custom_rowgroup_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': 'k-grid-content', 'attributeValue': _0x4c4678(0x7c), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x147) }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': 'tr' }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td' } }] }, { 'Name': _0x4c4678(0x100), 'Definitions': [{ 'custom_grid_selector': { 'tagName': 'div', 'attributeName': 'role', 'attributeValue': _0x4c4678(0xd2), 'nth_child': 0x0, 'querySelector': _0x4c4678(0xe9) }, 'custom_header_cell_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xfe), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x16e) }, 'custom_searchfield_selector': { 'tagName': _0x4c4678(0x15b), 'attributeName': 'class', 'attributeValue': _0x4c4678(0x13a), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x78) }, 'custom_rowgroup_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0xb2), 'attributeValue': _0x4c4678(0x158), 'nth_child': 0x1, 'querySelector': _0x4c4678(0x8d) }, 'custom_row_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x16d), 'attributeValue': 'row', 'nth_child': 0x0, 'querySelector': _0x4c4678(0x16f) }, 'custom_cell_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xc4), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x142) } }] }, { 'Name': 'DEVEX', 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xa5), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x85) }, 'custom_headergroup_selector': { 'tagName': 'div', 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x83), 'nth_child': 0x0, 'querySelector': _0x4c4678(0xee) }, 'custom_header_cell_selector': { 'tagName': 'td', 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0xfe), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x143) }, 'custom_searchfield_selector': { 'tagName': 'input', 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x13a), 'querySelector': _0x4c4678(0x111) }, 'custom_pager_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x165), 'querySelector': _0x4c4678(0xe1) }, 'custom_pager_pages_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x7c), 'attributeValue': 'dx-page', 'querySelector': 'div[class=\x27dx-page\x27]' }, 'custom_pager_sizes_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': 'class', 'attributeValue': 'dx-page-size', 'querySelector': _0x4c4678(0xd9) }, 'custom_rowgroup_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x16d), 'attributeValue': _0x4c4678(0x95), 'nth_child': 0x0, 'querySelector': 'div[class*=\x27dx-datagrid-rowsview\x27]' }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': _0x4c4678(0x168) }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td' } }] }, { 'Name': _0x4c4678(0xda), 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': 'role', 'attributeValue': _0x4c4678(0xa5), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x85) }, 'custom_header_cell_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': 'role', 'attributeValue': _0x4c4678(0xfe), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x16e) }, 'custom_searchfield_selector': { 'tagName': _0x4c4678(0x15b), 'attributeName': 'class', 'attributeValue': 'dx-texteditor-input', 'nth_child': 0x0, 'querySelector': _0x4c4678(0x78) }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': 'tr' }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td' } }] }, { 'Name': 'XGRID', 'Definitions': [{ 'custom_grid_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x16d), 'attributeValue': 'grid', 'nth_child': 0x0, 'querySelector': _0x4c4678(0x85) }, 'custom_headergroup_selector': { 'tagName': 'div', 'attributeName': 'class', 'attributeValue': _0x4c4678(0x166), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x150) }, 'custom_header_cell_selector': { 'tagName': _0x4c4678(0x130), 'attributeName': _0x4c4678(0x7c), 'attributeValue': _0x4c4678(0x11b), 'nth_child': 0x0, 'querySelector': _0x4c4678(0x151) }, 'custom_header_text_selector': { 'tagName': 'span', 'attributeName': 'class', 'attributeValue': 'x-column-header-text-inner', 'nth_child': 0x0, 'querySelector': 'span.x-column-header-text-inner' }, 'custom_rowgroup_selector': { 'tagName': 'div', 'attributeName': _0x4c4678(0x7c), 'attributeValue': 'x-grid-item-container', 'nth_child': 0x0, 'querySelector': _0x4c4678(0x155) }, 'custom_row_selector': { 'tagName': 'tr', 'querySelector': 'tr' }, 'custom_cell_selector': { 'tagName': 'td', 'querySelector': 'td' } }] }]; let active_grid_names = [], custom_grid_definitions = []; function _0x26d7(_0x547b0a, _0x47cd47) { const _0x519714 = _0x5197(); return _0x26d7 = function (_0x26d746, _0x142315) { _0x26d746 = _0x26d746 - 0x68; let _0x543623 = _0x519714[_0x26d746]; return _0x543623; }, _0x26d7(_0x547b0a, _0x47cd47); } var current_grid_selector = null, current_pager_selector = null, current_pager_sizes_selector = null, current_pager_pages_selector = null, current_headergroup_selector = null, current_header_cell_selector = null, current_searchfield_selector = undefined, current_rowgroup_selector = null, current_row_selector = null, current_cell_selector = null, table = undefined, tableInfo = undefined, tableHeaders = undefined, tableRows = undefined, tableCells = undefined, tablePager = undefined, tableSearchField = undefined, table_header_cells = undefined, table_pager_pages = undefined, table_pager_sizes = undefined, table_searchfield = undefined, table_columnnames = undefined, table_rows = undefined, table_cells = undefined, table_cell_values = undefined, table_column_values = undefined, TABLE_HIGHLIGHT_BORDER = _0x4c4678(0xce), TABLE_HEADERROW_HIGHLIGHT_BORDER = _0x4c4678(0x15a), TABLE_HEADER_HIGHLIGHT_BORDER = '2px\x20dashed\x20DarkOrange', TABLE_PAGER_HIGHLIGHT_BORDER = _0x4c4678(0xdb), TABLE_PAGER_PAGES_HIGHLIGHT_BORDER = _0x4c4678(0xd3), TABLE_PAGER_SIZES_HIGHLIGHT_BORDER = _0x4c4678(0xed), TABLE_ROWGROUP_HIGHLIGHT_BORDER = '2px\x20solid\x20Blue', TABLE_ROW_HIGHLIGHT_BORDER = _0x4c4678(0x14b), TABLE_TARGET_ROW_HIGHLIGHT_BORDER = _0x4c4678(0x114), TABLE_CELL_HIGHLIGHT_BORDER = _0x4c4678(0xfb), TABLE_TARGET_CELL_HIGHLIGHT_BORDER = '2px\x20solid\x20Red', TABLE_SEARCHFIELD_HIGHLIGHT_BORDER = _0x4c4678(0xbf), TABLE_HEADERCELL_HIGHLIGHT_BORDER = '2px\x20dashed\x20DarkOrange', TABLE_HEADERTEXT_HIGHLIGHT_BORDER = '2px\x20dashed\x20DarkOrange', TABLE_HEADERGROUP_HIGHLIGHT_BORDER = _0x4c4678(0x149); function highlightElement(_0x3e1196, _0x5b5c1e, _0x1b0100 = highlight_duration) { const _0x1379bd = _0x4c4678; if (!_0x3e1196) return; const _0x5263bf = _0x3e1196[_0x1379bd(0x127)]['border']; _0x3e1196[_0x1379bd(0x127)][_0x1379bd(0x119)] = _0x5b5c1e, (_0x5b5c1e !== TABLE_TARGET_CELL_HIGHLIGHT_BORDER || _0x5263bf === TABLE_CELL_HIGHLIGHT_BORDER) && setTimeout(() => { const _0x475527 = _0x1379bd; _0x3e1196[_0x475527(0x127)][_0x475527(0x119)] = _0x5263bf; }, _0x1b0100); } function tableFind(_0x3149f7) { const _0x856bac = _0x4c4678; verbose && console['log'](_0x856bac(0xcd) + (_0x3149f7[_0x856bac(0xa7)] || 'unknown\x20element')); let _0x92c258 = _0x3149f7, _0x274beb = _0x92c258['tagName'][_0x856bac(0x7a)](); var _0x481e14 = null; let _0x5bed08 = [_0x856bac(0x14f)]; !_0x5bed08[_0x856bac(0xb5)](_0x274beb) && (_0x92c258 = undefined, custom_grid_definitions['forEach'](_0x4c4b66 => { const _0x2838db = _0x856bac; console[_0x2838db(0x6c)](_0x2838db(0x77), _0x4c4b66[_0x2838db(0xea)]?.[_0x2838db(0xc5)]), _0x92c258 === undefined && (_0x92c258 = _0x3149f7[_0x2838db(0xd6)](_0x4c4b66[_0x2838db(0xea)]?.[_0x2838db(0xc5)])[_0x4c4b66?.[_0x2838db(0x12b)] ?? 0x0], typeof _0x92c258 !== _0x2838db(0xb7) && _0x92c258 !== null && (_0x274beb = 'custom', current_grid_selector = _0x4c4b66[_0x2838db(0xea)], console['debug'](_0x2838db(0x10e), current_grid_selector), _0x481e14 = _0x4c4b66[_0x2838db(0xf3)], current_pager_selector = _0x4c4b66[_0x2838db(0xc2)], current_pager_sizes_selector = _0x4c4b66[_0x2838db(0x11a)], current_pager_pages_selector = _0x4c4b66['custom_pager_pages_selector'], current_searchfield_selector = _0x4c4b66[_0x2838db(0x153)], current_headergroup_selector = _0x4c4b66[_0x2838db(0x6f)], current_header_cell_selector = _0x4c4b66[_0x2838db(0x15f)], current_rowgroup_selector = _0x4c4b66[_0x2838db(0xc1)], current_row_selector = _0x4c4b66[_0x2838db(0xdd)], current_cell_selector = _0x4c4b66['custom_cell_selector'])); })); let _0x4d8983 = [_0x856bac(0x14f), _0x856bac(0xb6)]; if (!_0x4d8983[_0x856bac(0xb5)](_0x274beb)) { _0x92c258 = _0x3149f7; while (!_0x4d8983[_0x856bac(0xb5)](_0x274beb)) { _0x92c258 = _0x92c258[_0x856bac(0x9b)], _0x274beb = typeof _0x92c258 === _0x856bac(0xb7) || _0x92c258 == null || _0x92c258[_0x856bac(0xa7)] == null ? '' : _0x92c258?.[_0x856bac(0xa7)][_0x856bac(0x7a)](), custom_grid_definitions['forEach'](_0x3ab970 => { const _0x234f49 = _0x856bac; let _0x1bdca8 = _0x3ab970[_0x234f49(0xea)]?.['attributeName'], _0x93a4bb = _0x3ab970[_0x234f49(0xea)]?.[_0x234f49(0x7d)], _0x156056 = _0x3ab970[_0x234f49(0xea)]?.[_0x234f49(0xa7)], _0x1ddd74 = _0x92c258['attributes'] !== undefined ? _0x92c258[_0x234f49(0xbc)][_0x1bdca8]?.[_0x234f49(0x131)] : null; _0x274beb === _0x156056 && (_0x1bdca8 === undefined || _0x1ddd74 === _0x93a4bb) && (_0x274beb = _0x234f49(0x14f), _0x481e14 = _0x3ab970[_0x234f49(0xf3)], current_grid_selector = _0x3ab970[_0x234f49(0xea)], current_pager_selector = _0x3ab970[_0x234f49(0xc2)], current_pager_sizes_selector = _0x3ab970[_0x234f49(0x11a)], current_pager_pages_selector = _0x3ab970[_0x234f49(0x90)], current_searchfield_selector = _0x3ab970['custom_searchfield_selector'], current_headergroup_selector = _0x3ab970[_0x234f49(0x6f)], current_header_cell_selector = _0x3ab970[_0x234f49(0x15f)], current_rowgroup_selector = _0x3ab970[_0x234f49(0xc1)], current_row_selector = _0x3ab970[_0x234f49(0xdd)], current_cell_selector = _0x3ab970['custom_cell_selector']); }); } } if (highlight_elements && highlight_grid && _0x92c258 !== undefined && _0x92c258 !== null) highlightElement(_0x92c258, TABLE_HIGHLIGHT_BORDER); if (_0x92c258 === undefined || _0x92c258 === null) throw new Error(_0x856bac(0xba) + element['tagName'] + _0x856bac(0x8c) + _0x274beb + ')\x20must\x20contain\x20or\x20be\x20a\x20descendant\x20of\x20a\x20table\x20or\x20grid'); return { 'table': _0x92c258, 'gridType': _0x481e14, 'gridDefinition': current_grid_selector }; } function findBestMatchingGrid(_0x57edc2) { const _0x477b18 = _0x4c4678; verbose && console[_0x477b18(0xe3)]('tableFind:\x20' + (_0x57edc2[_0x477b18(0xa7)] || _0x477b18(0x13f))); let _0x16953a = null, _0x1922f0 = -0x1; function _0xc79f34(_0x1e83ab) { const _0x1e5671 = _0x477b18; let _0xd956ef = []; for (let _0x25b35c of grid_definitions) { for (let _0x129796 of _0x25b35c[_0x1e5671(0x132)]) { let _0x2a4934 = _0x1e83ab['querySelector'](_0x129796[_0x1e5671(0xea)][_0x1e5671(0xc5)]); _0x2a4934 && _0xd956ef[_0x1e5671(0x12d)]({ 'name': _0x25b35c[_0x1e5671(0xf3)], 'gridElement': _0x2a4934, 'definition': _0x129796 }); } } return _0xd956ef; } function _0x358d9d(_0x360e1b) { const _0x4a6d46 = _0x477b18; let _0x49e2d1 = 0x0, { gridElement: _0x5f0476, definition: _0x4f9726 } = _0x360e1b; if (_0x5f0476) { let _0x402ed8 = _0x5f0476['querySelectorAll'](_0x4f9726[_0x4a6d46(0x15f)]?.[_0x4a6d46(0xc5)] || ''); _0x402ed8[_0x4a6d46(0x126)] > 0x0 && (_0x49e2d1 += 0x3); let _0x30e77e = _0x5f0476[_0x4a6d46(0xd6)](_0x4f9726[_0x4a6d46(0xdd)]?.['querySelector'] || ''); _0x30e77e[_0x4a6d46(0x126)] > 0x0 && (_0x49e2d1 += 0x2); let _0x3bb87d = _0x5f0476[_0x4a6d46(0xd6)](_0x4f9726[_0x4a6d46(0x94)]?.['querySelector'] || ''); _0x3bb87d[_0x4a6d46(0x126)] > 0x0 && (_0x49e2d1 += 0x1); } return _0x49e2d1; } function _0x3b8c6f(_0xb8a3a0) { const _0x19cbd0 = _0x477b18; let _0x4eb1b0 = _0xc79f34(_0xb8a3a0); if (_0x4eb1b0[_0x19cbd0(0x126)] === 0x0) { let _0x3f4ab7 = _0xb8a3a0; while (_0x3f4ab7 && _0x3f4ab7 !== document) { _0x4eb1b0 = _0xc79f34(_0x3f4ab7); if (_0x4eb1b0['length'] > 0x0) break; _0x3f4ab7 = _0x3f4ab7['parentElement']; } } return _0x4eb1b0; } function _0x1e1e3a(_0x36e545) { const _0x2152d5 = _0x477b18; return _0x36e545[_0x2152d5(0xd0)](_0x550a61 => { let _0x1f8490 = _0x358d9d(_0x550a61); _0x1f8490 > _0x1922f0 && (_0x16953a = _0x550a61, _0x1922f0 = _0x1f8490); }), !_0x16953a ? (console[_0x2152d5(0xe3)](_0x2152d5(0x105)), null) : (console[_0x2152d5(0xe3)](_0x2152d5(0x170) + _0x16953a[_0x2152d5(0xf5)] + '\x20with\x20score\x20' + _0x1922f0), _0x47b459(_0x16953a['definition']), _0x16953a[_0x2152d5(0x134)]); } function _0x47b459(_0x3eca3f) { const _0x4cf0af = _0x477b18; current_grid_selector = _0x3eca3f[_0x4cf0af(0xea)], current_pager_selector = _0x3eca3f[_0x4cf0af(0xc2)], current_pager_sizes_selector = _0x3eca3f[_0x4cf0af(0x11a)], current_pager_pages_selector = _0x3eca3f['custom_pager_pages_selector'], current_searchfield_selector = _0x3eca3f[_0x4cf0af(0x153)], current_headergroup_selector = _0x3eca3f[_0x4cf0af(0x6f)], current_header_cell_selector = _0x3eca3f[_0x4cf0af(0x15f)], current_rowgroup_selector = _0x3eca3f[_0x4cf0af(0xc1)], current_row_selector = _0x3eca3f[_0x4cf0af(0xdd)], current_cell_selector = _0x3eca3f[_0x4cf0af(0x94)]; } let _0x34638a = _0x3b8c6f(_0x57edc2), _0x3a68d5 = _0x1e1e3a(_0x34638a); if (_0x3a68d5 === undefined || _0x3a68d5 === null) throw new Error(_0x477b18(0xba) + _0x57edc2[_0x477b18(0xa7)] + ')\x20must\x20contain\x20or\x20be\x20a\x20descendant\x20of\x20a\x20table\x20or\x20grid'); return { 'table': _0x3a68d5, 'gridType': _0x16953a[_0x477b18(0xf5)], 'gridDefinition': _0x16953a[_0x477b18(0x9f)] }; } function tableHeadersGet(_0x397d13) { const _0x5d1e4b = _0x4c4678; let _0x5a47f5 = null, _0x627410 = [], _0x34685c = [], _0x48a3c1 = []; if (!current_header_cell_selector) throw new Error(_0x5d1e4b(0xe0)); _0x5a47f5 = _0x397d13; if (current_headergroup_selector) { console[_0x5d1e4b(0x6c)](_0x5d1e4b(0xb8), current_headergroup_selector[_0x5d1e4b(0xc5)]); const _0xcdb350 = _0x397d13[_0x5d1e4b(0xd6)](current_headergroup_selector[_0x5d1e4b(0xc5)]); console[_0x5d1e4b(0x6c)](_0x5d1e4b(0x10f), _0xcdb350[_0x5d1e4b(0x126)]), _0xcdb350[_0x5d1e4b(0x126)] > 0x0 ? (_0x5a47f5 = _0xcdb350[current_headergroup_selector[_0x5d1e4b(0x12b)] ?? 0x0], console[_0x5d1e4b(0x6c)](_0x5d1e4b(0xb0), _0x5a47f5), highlight_elements && highlight_headers && _0x5a47f5 && highlightElement(_0x5a47f5, TABLE_HEADERROW_HIGHLIGHT_BORDER)) : console[_0x5d1e4b(0x6c)]('DEBUG:\x20No\x20header\x20groups\x20found,\x20using\x20theTable\x20as\x20table_header_group.'); } if (current_header_cell_selector && _0x5a47f5) { console['debug'](_0x5d1e4b(0x11d), current_header_cell_selector[_0x5d1e4b(0xc5)]); const _0x4fb84c = _0x5a47f5[_0x5d1e4b(0xd6)](current_header_cell_selector[_0x5d1e4b(0xc5)]); console[_0x5d1e4b(0x6c)](_0x5d1e4b(0x6a), _0x4fb84c[_0x5d1e4b(0x126)]); if (_0x4fb84c[_0x5d1e4b(0x126)] > 0x0) { var _0x3337c9 = -0x1; _0x4fb84c[_0x5d1e4b(0xd0)](_0xeb692a => { const _0x523873 = _0x5d1e4b; _0x3337c9++; if (_0xeb692a[_0x523873(0x14d)](_0x523873(0xfc)) === 'on' || _0xeb692a[_0x523873(0x127)]['display'] === _0x523873(0x154)) { console['debug'](_0x523873(0x11c), _0xeb692a); return; } highlight_elements && highlight_headers && _0xeb692a && highlightElement(_0xeb692a, TABLE_HEADER_HIGHLIGHT_BORDER); let _0x183a58 = _0xeb692a[_0x523873(0xe8)][_0x523873(0x14c)](); if (_0x183a58[_0x523873(0xb5)]('Cell\x20value\x20has\x20been\x20edited')) { console[_0x523873(0x6c)]('DEBUG:\x20Skipping\x20column\x20with\x20\x27Cell\x20value\x20has\x20been\x20edited\x27:', _0x183a58); return; } try { let _0x2abd88 = current_header_cell_selector[_0x523873(0x72)] ?? DEFAULT_DELIMITER, _0x5f280a = current_header_cell_selector['sliceStart'] ?? 0x0, _0x2c1118 = current_header_cell_selector[_0x523873(0x12f)] ?? 0x1, _0x4cf3b4 = _0x183a58[_0x523873(0x70)](_0x2abd88)[_0x523873(0x126)]; if (_0x5f280a > _0x4cf3b4) _0x5f280a = -0x1; if (_0x2c1118 > _0x4cf3b4) _0x2c1118 = _0x4cf3b4; let _0x4ef5d0 = _0x183a58[_0x523873(0x70)](_0x2abd88)[_0x523873(0x15d)](_0x5f280a, _0x2c1118); _0x4ef5d0[_0x523873(0x126)] >= 0x1 && (_0x183a58 = _0x4ef5d0[_0x523873(0x10c)](_0x2abd88)['trim']()), current_header_cell_selector[_0x523873(0xf8)] && current_header_cell_selector[_0x523873(0xf8)][_0x523873(0xd0)](_0x3a1ba9 => { const _0x3b065c = _0x523873; _0x183a58 = _0x183a58[_0x3b065c(0x141)](_0x3a1ba9, '')['trim'](); }); } catch (_0x1e0500) { console[_0x523873(0x138)](_0x523873(0xf0), _0x1e0500[_0x523873(0x115)]); } !(current_header_cell_selector[_0x523873(0xd5)] && _0x3337c9 > 0x0 && is_separator_cell) && !(current_header_cell_selector['ignore_blank_headers'] && _0x3337c9 > 0x0 && _0x183a58 === '') && (_0x48a3c1[_0x523873(0x12d)](_0x183a58), _0x34685c[_0x523873(0x12d)](_0xeb692a), _0x627410[_0x523873(0x12d)]({ 'index': _0x627410[_0x523873(0x126)], 'text': _0x183a58, 'element': _0xeb692a })); }); } else console[_0x5d1e4b(0xb1)](_0x5d1e4b(0x6d)); } else console['debug'](_0x5d1e4b(0x106)); return console[_0x5d1e4b(0x6c)](_0x5d1e4b(0x13e), _0x627410), console['debug'](_0x5d1e4b(0x10d), _0x34685c), console[_0x5d1e4b(0x6c)](_0x5d1e4b(0x102), _0x48a3c1), { 'table_header_group': _0x5a47f5, 'table_headers': _0x627410, 'table_header_cells': _0x34685c, 'table_columnnames': _0x48a3c1 }; } function tablePagerGet(_0x3cd847) { const _0x1e2a26 = _0x4c4678; let _0x90fcec = undefined, _0x3ffa80 = null, _0x58c36c = null; if (current_pager_selector !== undefined && current_pager_selector !== null) { _0x90fcec = _0x3cd847[_0x1e2a26(0xd6)](current_pager_selector[_0x1e2a26(0xc5)])[current_pager_selector[_0x1e2a26(0x12b)] ?? 0x0]; verbose && console['log'](_0x1e2a26(0x6b), _0x90fcec); if (highlight_elements && highlight_pager && _0x90fcec !== undefined) highlightElement(_0x90fcec, TABLE_PAGER_HIGHLIGHT_BORDER); } if (current_pager_sizes_selector !== undefined && current_pager_sizes_selector !== null) { _0x3ffa80 = _0x3cd847[_0x1e2a26(0xd6)](current_pager_sizes_selector['querySelector']); verbose && console[_0x1e2a26(0xe3)](_0x1e2a26(0xc3), current_pager_sizes_selector); if (highlight_elements && highlight_pager_sizes && _0x3ffa80 !== undefined) _0x3ffa80[_0x1e2a26(0xd0)](_0x2902aa => { highlightElement(_0x2902aa, TABLE_PAGER_SIZES_HIGHLIGHT_BORDER); }); } if (current_pager_pages_selector !== undefined && current_pager_pages_selector !== null) { _0x58c36c = _0x3cd847[_0x1e2a26(0xd6)](current_pager_pages_selector[_0x1e2a26(0xc5)]); verbose && console[_0x1e2a26(0xe3)](_0x1e2a26(0xcf), _0x58c36c); if (highlight_elements && highlight_pager_pages && _0x58c36c !== undefined) _0x58c36c[_0x1e2a26(0xd0)](_0x2f00f3 => { highlightElement(_0x2f00f3, TABLE_PAGER_PAGES_HIGHLIGHT_BORDER); }); } return { 'table_pager': _0x90fcec, 'table_pager_sizes': _0x3ffa80, 'table_pager_pages': _0x58c36c }; } function tableSearchFieldGet(_0x302597) { const _0x184cfa = _0x4c4678; let _0x5e60bc = undefined; if (current_searchfield_selector !== undefined && current_searchfield_selector !== null) { _0x5e60bc = _0x302597[_0x184cfa(0xd6)](current_searchfield_selector[_0x184cfa(0xc5)])[current_searchfield_selector[_0x184cfa(0x12b)] ?? 0x0]; verbose && console['log'](_0x184cfa(0x96), _0x5e60bc); if (highlight_elements && highlight_pager && _0x5e60bc !== undefined) highlightElement(_0x5e60bc, TABLE_SEARCHFIELD_HIGHLIGHT_BORDER); } return { 'table_searchfield': _0x5e60bc, 'table_pager_sizes': table_pager_sizes, 'table_pager_pages': table_pager_pages }; } function tableRowsGet(_0x3ffed0) { const _0x5a7cb0 = _0x4c4678; let _0x124288 = _0x3ffed0, _0x53a65c = null, _0x355a03 = 0x0; if (typeof current_row_selector === _0x5a7cb0(0xb7) || current_row_selector === null) throw new Error(_0x5a7cb0(0xbe)); typeof current_rowgroup_selector !== _0x5a7cb0(0xb7) && current_rowgroup_selector !== null && (_0x124288 = _0x3ffed0[_0x5a7cb0(0xd6)](current_rowgroup_selector['querySelector'])[current_rowgroup_selector[_0x5a7cb0(0x12b)] ?? 0x0], verbose && console['log']('table_datarow_group\x20=\x20', _0x124288), highlight_elements && highlight_rowgroup && typeof _0x124288 !== _0x5a7cb0(0xb7) && highlightElement(_0x124288, TABLE_ROWGROUP_HIGHLIGHT_BORDER), typeof _0x124288 === _0x5a7cb0(0xb7) && (_0x124288 = _0x3ffed0)); _0x53a65c = _0x124288[_0x5a7cb0(0xd6)](current_row_selector['querySelector']); let _0x519cf3 = Array[_0x5a7cb0(0xd7)](_0x53a65c), _0x4b339b = parseRanges(row_ranges, _0x519cf3[_0x5a7cb0(0x126)]) || Array[_0x5a7cb0(0xd7)]({ 'length': _0x519cf3[_0x5a7cb0(0x126)] }, (_0x5bce7d, _0x2a1eb0) => _0x2a1eb0); return _0x4b339b = _0x4b339b[_0x5a7cb0(0xdc)](_0xcb4ee0 => _0xcb4ee0 >= 0x0 && _0xcb4ee0 < _0x519cf3[_0x5a7cb0(0x126)]), _0x4b339b = _0x4b339b['slice'](0x0, DEFAULT_MAX_ROWS), _0x53a65c = _0x4b339b[_0x5a7cb0(0xb9)](_0x3139ba => _0x519cf3[_0x3139ba]), _0x355a03 = _0x53a65c['length'], verbose && (console[_0x5a7cb0(0xe3)](_0x5a7cb0(0xfd), safeLogObject(_0x53a65c)), console[_0x5a7cb0(0xe3)](_0x5a7cb0(0x116), _0x355a03)), _0x53a65c[_0x5a7cb0(0xd0)]((_0x5de5a9, _0x47a18a) => { const _0x215f41 = _0x5a7cb0; console[_0x215f41(0xe3)](_0x215f41(0x80) + _0x47a18a + ':', _0x5de5a9[_0x215f41(0x16c)]); }), { 'table_datarow_group': _0x124288, 'table_rows': _0x53a65c, 'table_row_count': _0x355a03 }; } function tableCellsGet(_0x23db25, _0x5bba4f) { const _0x1567f8 = _0x4c4678; let _0x360191 = [], _0x135024 = [], _0x430578 = _0x23db25[_0x1567f8(0x8f)], _0x10329f = _0x5bba4f?.[_0x1567f8(0x108)] || [], _0x4e3a6d = parseRanges(col_ranges, _0x10329f[_0x1567f8(0x126)]); _0x5bba4f[_0x1567f8(0x108)] = _0x4e3a6d[_0x1567f8(0xb9)](_0x16f39d => _0x10329f[_0x16f39d]); let _0x1430ba = _0x5bba4f[_0x1567f8(0x108)][_0x1567f8(0x84)]((_0x3ca76b, _0x21667e) => { return _0x3ca76b[_0x21667e] = [], _0x3ca76b; }, {}); if (verbose) console['debug'](_0x1567f8(0xf4) + JSON['stringify'](_0x1430ba)); for (let _0x188938 = 0x0; _0x188938 < _0x430578[_0x1567f8(0x126)]; _0x188938++) { let _0x157b5c = null, _0x138a1a; highlight_elements && highlight_rows && _0x430578[_0x188938] && highlightElement(_0x430578[_0x188938], TABLE_ROW_HIGHLIGHT_BORDER); if (verbose) console['debug']('Selecting\x20cells\x20in\x20row\x20' + _0x188938 + '\x20with\x20selector:\x20' + current_cell_selector[_0x1567f8(0xc5)]); let _0x241ae3 = _0x430578[_0x188938]?.[_0x1567f8(0xd6)](current_cell_selector[_0x1567f8(0xc5)]); if (!_0x241ae3 || _0x241ae3['length'] === 0x0) continue; let _0x38bc4b = Array[_0x1567f8(0xd7)](_0x241ae3); _0x241ae3 = _0x4e3a6d['map'](_0x38f4fb => _0x38bc4b[_0x38f4fb]); if (_0x241ae3?.['length'] > 0x0) { _0x138a1a = {}; let _0x21eb9e = 0x0; _0x138a1a[_0x1567f8(0x16b)] = _0x188938, _0x241ae3[_0x1567f8(0xd0)]((_0x241961, _0x344813) => { const _0x1b7b02 = _0x1567f8; let _0x3dcd3f = _0x5bba4f['table_columnnames'][_0x21eb9e++]; var _0x3a3e65 = _0x241961; if (typeof current_cell_selector?.['shadowDomPath'] === 'object') { var _0x4d006e = undefined; current_cell_selector['shadowDomPath'][_0x1b7b02(0xd0)](_0x5a6656 => { const _0x53870a = _0x1b7b02; _0x4d006e === undefined ? _0x4d006e = _0x241961[_0x53870a(0xd6)](_0x5a6656)[0x0] : _0x4d006e = _0x4d006e[_0x53870a(0x156)][_0x53870a(0x162)][_0x53870a(0xd6)](_0x5a6656)[0x0]; }), _0x4d006e !== undefined && (_0x3a3e65 = _0x4d006e['querySelectorAll'](current_cell_selector['shadowQuerySelector'])[0x0]); } let _0x3aa59b = _0x3a3e65 ? _0x3a3e65['innerText'] : ''; if (verbose) console['debug']('Row\x20' + _0x188938 + _0x1b7b02(0x10a) + _0x344813 + _0x1b7b02(0x120) + _0x3aa59b); current_cell_selector[_0x1b7b02(0xf8)] !== undefined && current_cell_selector['stringReplacements']['forEach'](_0x536127 => { const _0xe58a25 = _0x1b7b02; _0x3aa59b = _0x3aa59b[_0xe58a25(0x141)](_0x536127, ''); }), _0x138a1a[_0x3dcd3f] = _0x3aa59b, _0x1430ba[_0x3dcd3f][_0x1b7b02(0x12d)](_0x3aa59b), highlight_elements && highlight_cells && _0x3a3e65 && highlightElement(_0x3a3e65, TABLE_CELL_HIGHLIGHT_BORDER); }), _0x157b5c = _0x138a1a; } if (_0x241ae3?.['length'] > 0x0) _0x360191['push'](_0x241ae3); _0x157b5c !== null && _0x135024['push'](_0x157b5c); } return { 'table_cells': _0x360191, 'table_cell_values': _0x135024, 'table_column_values': _0x1430ba }; } function tableRowFind(_0x238e75, _0x2a9f91, _0xafaf3f, _0x4a8311) { const _0x183de3 = _0x4c4678; let _0x59dbe1 = -0x1, _0x54e674, _0x14a0f0, _0xf1c538, _0x4864eb = 0x0; switch (typeof _0xafaf3f) { case _0x183de3(0x112): _0x59dbe1 = _0xafaf3f; break; case _0x183de3(0x146): switch (_0xafaf3f[_0x183de3(0x15e)]()) { case 'LAST': _0x59dbe1 = _0x238e75[_0x183de3(0x126)] - 0x1; break; case _0x183de3(0x113): _0x59dbe1 = 0x0; break; }break; case _0x183de3(0x16a): default: _0x54e674 = Object[_0x183de3(0x98)](_0xafaf3f)[0x0], _0x14a0f0 = _0xafaf3f[_0x54e674], _0x4864eb = Object[_0x183de3(0x98)](_0xafaf3f)[_0x183de3(0xb5)](_0x183de3(0xdf)) ? _0xafaf3f[_0x183de3(0xdf)] : 0x0; if (verbose) console[_0x183de3(0xe3)](_0x183de3(0x144), _0xafaf3f, _0x183de3(0x79), _0x54e674, _0x183de3(0x8b), _0x14a0f0, _0x183de3(0x121), _0x4864eb); verbose && (console['log'](_0x183de3(0x157), _0x2a9f91['length']), console[_0x183de3(0xe3)](_0x183de3(0x137), _0x238e75[_0x183de3(0x126)])); if (_0x54e674 !== _0x183de3(0x16b) && _0x2a9f91[_0x183de3(0x126)] > 0x0) { let _0x2f002c = -0x1;[]['forEach'][_0x183de3(0x12e)](_0x2a9f91, function (_0x47686c) { _0x2f002c = ++_0x2f002c; if (_0x47686c === _0x54e674) _0xf1c538 = _0x2f002c; }); } if (_0xf1c538 == undefined && !isNaN(_0x54e674)) _0xf1c538 = Number(_0x54e674); verbose && (console[_0x183de3(0xe3)]('\x20\x20target_row_column_id:', _0xf1c538), console[_0x183de3(0xe3)](_0x183de3(0x13d), _0x238e75[0x0][_0x183de3(0x73)][_0x183de3(0x126)])); if (_0x54e674['toLowerCase']() === _0x183de3(0x16b)) { _0x59dbe1 = _0x14a0f0; if (_0x59dbe1 < 0x0) _0x59dbe1 = 0x0; if (_0x59dbe1 >= _0x238e75[_0x183de3(0x126)]) _0x59dbe1 = _0x238e75[_0x183de3(0x126)] - 0x1; } else { if (_0x238e75['length'] > 0x0 && (_0xf1c538 >= 0x0 && _0xf1c538 < _0x238e75[0x0]['children'][_0x183de3(0x126)])) { let _0x1e34e8 = -0x1; if (verbose) console[_0x183de3(0xe3)](_0x183de3(0xec));[][_0x183de3(0xd0)]['call'](_0x238e75, function (_0x5db28f) { const _0x4d0ae4 = _0x183de3; _0x1e34e8 = ++_0x1e34e8; if (verbose) console[_0x4d0ae4(0xe3)](_0x4d0ae4(0xff), _0x5db28f['children'][_0xf1c538]?.['innerText'][_0x4d0ae4(0x14c)]() + _0x4d0ae4(0x13b) + _0x14a0f0); if (_0x59dbe1 == -0x1 && stringMatch[_0x4a8311](_0x5db28f[_0x4d0ae4(0x73)][_0xf1c538]?.[_0x4d0ae4(0xe8)][_0x4d0ae4(0x14c)](), _0x14a0f0) && _0x4864eb-- >= 0x0) { _0x59dbe1 = _0x1e34e8; if (verbose) console[_0x4d0ae4(0xe3)]('\x20\x20\x20\x20==>\x20target_row_id\x20=\x20', _0x59dbe1); } }); } } break; }if (verbose) console['log'](_0x183de3(0xab), _0x59dbe1); if (_0x59dbe1 == -0x1) throw new Error('Error\x20finding\x20target\x20row\x20[' + JSON[_0x183de3(0x152)](_0xafaf3f) + ']'); if (highlight_elements && highlight_target_row && _0x238e75[_0x59dbe1] !== undefined && _0x238e75[_0x59dbe1] !== null) highlightElement(_0x238e75[_0x59dbe1], TABLE_TARGET_ROW_HIGHLIGHT_BORDER); return _0x238e75[_0x59dbe1]; } function tableCellFind(_0x5706d4, _0x313980, _0x5aa0f9) { const _0x3e0bc7 = _0x4c4678; if (verbose) console['log'](_0x3e0bc7(0x123), _0x5706d4, _0x313980); let _0x2d5a60 = null, _0x1c0560 = -0x1; switch (typeof _0x313980) { case _0x3e0bc7(0x112): _0x1c0560 = _0x313980 < 0x0 ? 0x0 : _0x313980 >= _0x5706d4[_0x3e0bc7(0x126)] ? _0x5706d4['length'] - 0x1 : _0x313980; break; case _0x3e0bc7(0x146): default: switch (_0x313980[_0x3e0bc7(0x15e)]()) { case _0x3e0bc7(0x15c): _0x1c0560 = _0x5706d4[_0x3e0bc7(0x73)][_0x3e0bc7(0x126)] - 0x1; break; case _0x3e0bc7(0x113): _0x1c0560 = 0x0; break; default: if (table_columnnames !== null && table_columnnames['length'] > 0x0) { let _0x467694 = -0x1;[]['forEach'][_0x3e0bc7(0x12e)](table_columnnames, function (_0x51d2e9) { const _0x525ad5 = _0x3e0bc7; _0x467694 = ++_0x467694, stringMatch[_0x5aa0f9](_0x51d2e9[_0x525ad5(0x14c)](), _0x313980) && (_0x1c0560 = _0x467694); }); } } }console[_0x3e0bc7(0xe3)]('target_column_id\x20=\x20', _0x1c0560); if (_0x1c0560 > -0x1) _0x2d5a60 = _0x5706d4[_0x3e0bc7(0x73)][_0x1c0560]; if (highlight_elements && highlight_target_cell && _0x2d5a60 !== undefined && _0x2d5a60 !== null) highlightElement(_0x2d5a60, TABLE_TARGET_CELL_HIGHLIGHT_BORDER); return _0x2d5a60; } function validateItemOrder(_0x245341, _0x29a073, _0x5566d4) { const _0x31d3de = _0x4c4678; let _0x2fb9ef = 0x0, _0x4d75aa = Object[_0x31d3de(0x98)](_0x245341), _0x55f12c = []; _0x4d75aa[_0x31d3de(0xd0)](_0x3f2cdf => { if (_0x3f2cdf === _0x29a073 || _0x2fb9ef++ === _0x29a073) _0x55f12c = _0x245341[_0x3f2cdf]; }); let _0x371dea; if (_0x5566d4[_0x31d3de(0x15e)]() === _0x31d3de(0x9c)) _0x371dea = _0x55f12c[_0x31d3de(0x15d)](0x1)['every']((_0x5c17f8, _0x1e77b4) => !isNaN(_0x5c17f8) ? Number(_0x55f12c[_0x1e77b4]) >= Number(_0x5c17f8) : _0x55f12c[_0x1e77b4] >= _0x5c17f8); else _0x371dea = _0x55f12c[_0x31d3de(0x15d)](0x1)['every']((_0x5daba8, _0x5e6a28) => !isNaN(_0x5daba8) ? Number(_0x55f12c[_0x5e6a28]) <= Number(_0x5daba8) : _0x55f12c[_0x5e6a28] <= _0x5daba8); if (!_0x371dea) throw new Error(_0x31d3de(0xa1) + _0x5566d4 + _0x31d3de(0x82) + JSON['stringify'](_0x55f12c, null, 0x2)); } function columnSum(_0x4960de, _0x40e2fb) { const _0x41883e = _0x4c4678; let _0x3e8972 = 0x0, _0x59b501 = 0x0, _0x1ea8a4 = Object[_0x41883e(0x98)](_0x4960de), _0x3d398b = []; return _0x1ea8a4[_0x41883e(0xd0)](_0xeaff4 => { if (_0xeaff4 === _0x40e2fb || _0x3e8972++ === _0x40e2fb) _0x3d398b = _0x4960de[_0xeaff4]; }), _0x59b501 = _0x3d398b[_0x41883e(0x84)]((_0x3bfa34, _0x5a6b9a) => { const _0xf98057 = _0x41883e; var _0x243b68 = /\D*(\d+|\d.*?\d)(?:\D+(\d{2}))?\D*$/, _0x12750e = _0x243b68[_0xf98057(0x92)](_0x5a6b9a); if (_0x12750e === null) return _0x3bfa34; var _0x3a4001 = parseFloat(_0x12750e[0x1]['replace'](/\D/, '') + '.' + (_0x12750e[0x2] ? _0x12750e[0x2] : '00')); if (!isNaN(_0x3a4001)) return Number(_0x3a4001) + _0x3bfa34; }, 0x0), _0x59b501; } const stringMatch = {}; stringMatch[_0x4c4678(0x169)] = function (_0x541b28, _0x5b4ceb) { return _0x541b28 === _0x5b4ceb; }, stringMatch[_0x4c4678(0xf7)] = function (_0x1d536b, _0x20121a) { const _0x1a2a16 = _0x4c4678; return _0x1d536b[_0x1a2a16(0xb4)](_0x20121a); }, stringMatch[_0x4c4678(0x89)] = function (_0x37886c, _0x4ca5ee) { const _0x3bdc0d = _0x4c4678; return _0x37886c[_0x3bdc0d(0x125)](_0x4ca5ee); }, stringMatch[_0x4c4678(0xb5)] = function (_0x15914c, _0x2ea331) { return _0x15914c['includes'](_0x2ea331); }, stringMatch[_0x4c4678(0x71)] = function (_0x4ce134, _0xdeada3) { const _0x2274ea = _0x4c4678; return _0x4ce134[_0x2274ea(0xb5)](_0xdeada3); }, stringMatch[_0x4c4678(0x9a)] = function (_0x5efb54, _0x2cbc32) { const _0x8c9dc8 = _0x4c4678, _0x1908a6 = _0x2cbc32[_0x8c9dc8(0x68)](/\/(.+?)\/([a-z]*)$/); if (_0x1908a6) { const _0x1cc6c7 = _0x1908a6[0x1], _0x37fe37 = _0x1908a6[0x2], _0x2e9c84 = new RegExp(_0x1cc6c7, _0x37fe37); return _0x2e9c84[_0x8c9dc8(0xad)](_0x5efb54); } else { const _0x42829b = new RegExp(_0x2cbc32); return _0x42829b[_0x8c9dc8(0xad)](_0x5efb54); } }; const copyToClipboard = _0x3d73ca => { const _0x151f2e = _0x4c4678, _0x38da30 = document['createElement'](_0x151f2e(0xc0)); _0x38da30['value'] = _0x3d73ca, _0x38da30[_0x151f2e(0x135)]('readonly', ''), _0x38da30['style'][_0x151f2e(0x7e)] = _0x151f2e(0x129), _0x38da30[_0x151f2e(0x127)][_0x151f2e(0x161)] = _0x151f2e(0x97), document[_0x151f2e(0x9d)][_0x151f2e(0xc9)](_0x38da30); const _0x17fab0 = document[_0x151f2e(0x167)]()[_0x151f2e(0x133)] > 0x0 ? document['getSelection']()[_0x151f2e(0xeb)](0x0) : ![]; _0x38da30[_0x151f2e(0xc8)](), document['execCommand'](_0x151f2e(0xa9)), document[_0x151f2e(0x9d)][_0x151f2e(0xbd)](_0x38da30), _0x17fab0 && (document[_0x151f2e(0x167)]()[_0x151f2e(0x128)](), document[_0x151f2e(0x167)]()['addRange'](_0x17fab0)); }; function safeLogObject(_0x48444c, _0x1eb39b = 0x0, _0x575bad = 0x3) { const _0x397b49 = _0x4c4678; if (_0x1eb39b > _0x575bad) return _0x397b49(0xe6); if (typeof _0x48444c !== _0x397b49(0x16a) || _0x48444c === null) return _0x48444c; const _0x3f2bdd = new WeakSet(); function _0x416e73(_0x4864a5, _0x545392) { const _0x1df4b4 = _0x397b49; if (_0x545392 > _0x575bad || _0x4864a5 === null || typeof _0x4864a5 !== _0x1df4b4(0x16a)) return _0x4864a5; if (_0x3f2bdd[_0x1df4b4(0x6e)](_0x4864a5)) return '[Circular]'; _0x3f2bdd[_0x1df4b4(0xca)](_0x4864a5); const _0x4f50c5 = Array[_0x1df4b4(0x93)](_0x4864a5) ? [] : {}; for (const _0x44d2ea in _0x4864a5) { Object[_0x1df4b4(0x14e)][_0x1df4b4(0x13c)][_0x1df4b4(0x12e)](_0x4864a5, _0x44d2ea) && (_0x4f50c5[_0x44d2ea] = _0x416e73(_0x4864a5[_0x44d2ea], _0x545392 + 0x1)); } return _0x3f2bdd['delete'](_0x4864a5), _0x4f50c5; } return _0x416e73(_0x48444c, _0x1eb39b); } function parametersProcess() { const _0x22a46c = _0x4c4678; if (typeof element === _0x22a46c(0xb7) || element === null) throw new Error(_0x22a46c(0x139)); return_variable_name = DEFAULT_RETURN_VARIABLE_NAME; if (typeof returnVariableName !== _0x22a46c(0xb7) && returnVariableName !== null) return_variable_name = returnVariableName; typeof highlightElements !== _0x22a46c(0xb7) && highlightElements === !![] && (highlight_elements = !![], highlight_grid = !![], highlight_pager = !![], highlight_pager_sizes = !![], highlight_pager_pages = !![], highlight_headers = !![], highlight_rowgroup = !![], highlight_rows = !![], highlight_cells = !![], highlight_target_row = !![], highlight_target_cell = !![]); if (typeof gridTypeSearchOrder === _0x22a46c(0x146)) grid_type_search_order = [gridTypeSearchOrder[_0x22a46c(0x15e)]()]; if (typeof gridTypeSearchOrder === _0x22a46c(0x16a) && Array[_0x22a46c(0x93)](gridTypeSearchOrder)) grid_type_search_order = gridTypeSearchOrder; if (typeof customGridSelectors === _0x22a46c(0x16a) && customGridSelectors !== null) custom_grid_definitions = customGridSelectors; else grid_type_search_order['forEach'](_0x2bf404 => { grid_definitions['forEach'](_0xc85cde => { const _0x383e9e = _0x26d7; _0x2bf404 === _0xc85cde[_0x383e9e(0xf3)] && (_0xc85cde[_0x383e9e(0x132)][_0x383e9e(0xd0)](_0x3ec411 => { const _0x3c6601 = _0x383e9e; custom_grid_definitions[_0x3c6601(0x12d)](_0x3ec411); }), active_grid_names[_0x383e9e(0x12d)](_0xc85cde[_0x383e9e(0xf3)])); }); }); verbose && (console['log'](_0x22a46c(0xfa) + JSON[_0x22a46c(0x152)](grid_type_search_order)), console[_0x22a46c(0xe3)](_0x22a46c(0x11e) + JSON[_0x22a46c(0x152)](custom_grid_definitions))); matchtype = _0x22a46c(0x169); if (typeof matchType !== _0x22a46c(0xb7) && matchType !== null) matchtype = matchType; row_selector = { 'index': 0x0 }; typeof rowSelector !== _0x22a46c(0xb7) && rowSelector !== null && (row_selector = typeof rowSelector === _0x22a46c(0x112) ? { 'index': rowSelector } : rowSelector); column_selector = 0x0; typeof columnSelector !== 'undefined' && columnSelector !== null && (column_selector = columnSelector); typeof pageSize !== _0x22a46c(0xb7) && pageSize !== null && (page_size = pageSize); typeof pageNumber !== _0x22a46c(0xb7) && pageNumber !== null && (page_number = pageNumber); typeof searchString !== 'undefined' && searchString !== null && (search_string = searchString); compare_expression = '=='; if (typeof compareExpression !== _0x22a46c(0xb7) && compareExpression !== null) { compare_expression = compareExpression; if (compare_expression == '=') compare_expression = '='; } order_direction = 'ASCENDING', typeof sortOrder !== 'undefined' && sortOrder !== null && (order_direction = sortOrder[_0x22a46c(0x15e)]()), verbose && (console[_0x22a46c(0x91)](_0x22a46c(0x136)), console['info'](_0x22a46c(0x87), grid_type_search_order), console[_0x22a46c(0x91)](_0x22a46c(0x12c), row_selector), console['info']('\x20\x20column_selector', column_selector), console[_0x22a46c(0x91)](_0x22a46c(0xac), matchtype), console[_0x22a46c(0x91)](_0x22a46c(0x148), compare_expression), console[_0x22a46c(0x91)](_0x22a46c(0x81), order_direction), console[_0x22a46c(0x91)](_0x22a46c(0x164), return_variable_name)); } function parseRanges(_0x15e595, _0x4368ca) { const _0x530ada = _0x4c4678; if (typeof _0x15e595 === _0x530ada(0x112)) return Array['from']({ 'length': Math[_0x530ada(0x11f)](_0x15e595, _0x4368ca) }, (_0x109f4f, _0x2c5cfa) => _0x2c5cfa); if (typeof _0x15e595 !== _0x530ada(0x146) || !_0x15e595[_0x530ada(0x14c)]()) return Array[_0x530ada(0xd7)]({ 'length': _0x4368ca }, (_0x32fe16, _0x55e2b1) => _0x55e2b1); let _0x55a71f = _0x15e595[_0x530ada(0x70)](','), _0x209ad8 = []; return _0x55a71f[_0x530ada(0xd0)](_0x18037f => { const _0x25ac2e = _0x530ada; let [_0x52bddf, _0x55cb0c] = _0x18037f[_0x25ac2e(0x70)]('-')['map'](Number); if (isNaN(_0x52bddf)) return; isNaN(_0x55cb0c) && (_0x55cb0c = _0x52bddf); for (let _0x4413d9 = _0x52bddf; _0x4413d9 <= _0x55cb0c; _0x4413d9++) { _0x4413d9 <= _0x4368ca && _0x209ad8[_0x25ac2e(0x12d)](_0x4413d9 - 0x1); } }), _0x209ad8['slice'](0x0, _0x4368ca); }

/*** BEGIN COMMON TABLE FUNCTIONALITY ***/

/* Validate parameters
 */
parametersProcess();

/* Find the target table based on starting element and custom_grid_definitions
 */
if (grid_type_search_order == "BESTMATCH")
    tableInfo = findBestMatchingGrid(element);
else
    tableInfo = tableFind(element);

/* Find the target table based on starting element and custom_grid_definitions
 */
tableInfo = tableFind(element);

/* Process the table infomation for use by the specifics ofthis function 
 */
table = tableInfo?.table;
tableHeaders = tableHeadersGet(table);
tablePager = tablePagerGet(table);
tableSearchField = tableSearchFieldGet(table);
tableRows = tableRowsGet(table, tableHeaders);
tableCells = tableCellsGet(tableRows, tableHeaders);

if (verbose) {
    console.log("===> table", table);
    console.log("===> tablePager", tablePager);
    console.log("===> tableSearchField", tableSearchField);
    console.log("===> tableHeaders", tableHeaders);
    console.log("===> tableRows", tableRows);
    console.log("===> tableCells", tableCells);
}

table_header_cells = tableHeaders?.table_header_cells;
table_pager_pages = tablePager?.table_pager_pages;
table_pager_sizes = tablePager?.table_pager_sizes;
table_searchfield = tableSearchField?.table_searchfield;
table_columnnames = tableHeaders?.table_columnnames;
table_rows = tableRows?.table_rows;
table_cells = tableCells?.table_cells;
table_cell_values = tableCells?.table_cell_values;
table_column_values = tableCells?.table_column_values;

if (verbose) {
    console.log("===> table_header_cells", table_header_cells);
    console.log("===> table_pager_pages", table_pager_pages);
    console.log("===> table_pager_sizes", table_pager_sizes);
    console.log("===> table_searchfield", table_searchfield);
    console.log("===> table_columnnames", table_columnnames);
    console.log("===> table_rows", table_rows);
    console.log("===> table_cells", table_cells);
    console.log("===> table_cell_values", table_cell_values);
    console.log("===> table_column_values", table_column_values);
}

exportsTest["tableHTML"] = table.outerHTML;
exportsTest["tableColumnNames"] = table_columnnames;
exportsTest["tableCellValues"] = table_cell_values;

/*** END COMMON TABLE FUNCTIONALITY ***/

/*** Function Specific Logic Below ***/

let target_table_row = tableRowFind(table_rows, table_columnnames, row_selector, matchtype);
let target_table_cell = undefined;

if (typeof target_table_row !== 'undefined' && target_table_row !== null)
    target_table_cell = tableCellFind(target_table_row, column_selector, matchtype);

if (verbose)
    console.log("target_table_cell = ", target_table_cell);

if (typeof target_table_cell !== 'undefined' && target_table_cell !== null) {

    if (verbose)
        console.log("Click on cell with innerText = ", target_table_cell.innerText);

    copyToClipboard(target_table_cell.innerText);
    exportsTest[return_variable_name] = target_table_cell.innerText;

    if (highlight_elements && highlight_target_cell && target_table_cell != undefined)
        highlightElement(target_table_cell, TABLE_TARGET_CELL_HIGHLIGHT_BORDER);

    function clickOnElem(elem, offsetX, offsetY) {
        let rect = elem.getBoundingClientRect(),
            posX = rect.left, posY = rect.top; // get elems coordinates
        // calculate position of click
        if (typeof offsetX == 'number') posX += offsetX;
        else if (offsetX == 'center') {
            posX += rect.width / 2;
            if (offsetY == null) posY += rect.height / 2;
        }
        if (typeof offsetY == 'number') posY += offsetY;
        // create event-object with calculated position
        let evt = new MouseEvent('click', { bubbles: true, clientX: posX, clientY: posY });
        elem.dispatchEvent(evt); // trigger the event on elem
    }

    function doEvent(obj, eventName) {
        let event = new Event(eventName, { target: obj, bubbles: true, composed: true });
        event.simulated = true; // React 15   
        return obj ? obj.dispatchEvent(event) : false;
    }

    console.log("Target Cell", target_table_cell);

    let target_element = (target_table_cell.children.length == 0) ? target_table_cell : target_table_cell.children[0]

    if (typeof targetElementXPath !== "undefined" && targetElementXPath !== null) {

        let matchingElements = document.evaluate(targetElementXPath, target_table_cell, null, XPathResult.ANY_TYPE, null);
        let matching_elements = [];
        try {
            let matchingElement = matchingElements.iterateNext();
            while (matchingElement) {
                if (verbose) console.log("matchingElement", matchingElement);
                matching_elements.push(matchingElement);
                matchingElement = matchingElements.iterateNext();
            }
        }
        catch { }

        console.log("matching_elements", matching_elements);

        let matching_element = matching_elements[0];
        console.log("XPATH Matched Element", matching_element);

        if (matching_element !== undefined && matching_element !== null) {
            if (highlight_elements && highlight_target_cell)
                highlightElement(matching_element, TABLE_TARGET_CELL_HIGHLIGHT_BORDER);
            xpath_element_found = true;
            target_element = matching_element;
        }
    }

    console.log("Target Element", target_element);

    return new Promise((resolve, reject) => {

        doEvent(target_element, 'mouseover');
        setTimeout(resolve(), 1000);

    })
        .then(() => {

            doEvent(target_element, 'click');
            try {
                if (xpath_element_found) {
                    target_element.click();
                }
                else {
                    target_element.firstElementChild.click();
                }
            }
            catch (err) {
                try {
                    target_element.firstChild.click();
                }
                catch (err) {
                    target_element.click();
                }
            }
        })

}